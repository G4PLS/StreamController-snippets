from src.backend.PluginManager.ActionCore import ActionCore
from src.backend.DeckManagement.InputIdentifier import InputEvent, Input
from src.backend.PluginManager.PluginSettings.Asset import Color, Icon

from GtkHelper.GtkHelper import better_disconnect

import gi

gi.require_version("Gtk", "4.0")
gi.require_version("Adw", "1")
from gi.repository import Gtk, Adw


class $NAME(ActionCore):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

        # Setup AssetManager values
        self.icon_keys = []
        self.color_keys = []

        self.current_icon: Icon = None
        self.current_color: Color = None
        self.icon_name = ""
        self.color_name = ""

        self.plugin_base.asset_manager.icons.add_listener(self.icon_changed)
        self.plugin_base.asset_manager.colors.add_listener(self.color_changed)

        # Setup Action Related Stuff
        self.create_generative_ui()
        self.create_event_assigners()

    def create_generative_ui(self):
        pass

    def create_event_assigners(self):
        pass

    def on_ready(self):
        pass

    def on_update(self):
        pass

    def change_color(self, *args, **kwargs):
        pass

    def change_icon(self, *args, **kwargs):
        pass

    def display_icon(self):
        if not self.current_icon:
            return

        _, rendered = self.current_icon.get_values()

        if rendered or None:
            self.set_media(image=rendered)

    def display_color(self):
        if not self.current_color:
            return

        color = self.current_color.get_values()

        self.set_background_color(color)

    async def icon_changed(self, event: str, key: str, asset):
        if not key in self.icon_keys:
            return

        if key != self.icon_name:
            return

        self.current_icon = asset
        self.icon_name = key

        self.display_icon()

    async def color_changed(self, event: str, key: str, asset):
        if not key in self.color_keys:
            return

        if key != self.color_name:
            return

        self.current_color = asset
        self.color_name = key

        self.display_color()
